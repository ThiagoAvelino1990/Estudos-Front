/*resetando o CSS(limpando coisas que já vem por padrão no navegador)*/
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

ul {
    list-style: none;/*estilo da lista é igual a nenhum. Retirando os pontos da lista*/
}

/*Estilo CSS com especificidade de 0,0,1*/
body {
    background-image: url(./assests/bg.jpg);    /*Buscando a imagem de background*/
    background-position: top center;            /*posisionamento do backround. Topo e centralizado*/
    background-size: 100% auto;                 /*100% da largura disponível do background e o auto é a altura*/
    background-repeat: no-repeat;               /*não repetir o background*/
    background-color: #121214;                /*cor no formato hexadecimal*/
}

body * {
    font-family: 'Inter', sans-serif;/*Fontes serifadas*/
    line-height: 160%;/*Altura da linha de 160%*/
}

/*o asteríscto(*) significa que está buscando todos os elementos que estão dentro do main*/
/*main * {
    border: 1px solid red;
}*/

header {
    /*text-align: center;/*todo conteúdo que é identificado com propriedade de texto, o text-aling consegue alinhar. A imagem é uma propriedade de texto*/
    padding-top: 32px;
    height: calc(120px + 32px);/*calc() é uma função para que o CSS calcula de acordo com os parâmetros passados*/
    /*
    Também pode ser usado
    margin-top: 32px
    */
}

header div {
    width: 120px;
    margin: auto;
    background-image: linear-gradient(90deg, #9572fc 0%, #49e7ad 50.52%, #e2d45c 100%); /*Forma de realizar uma "degradê" de cores*/

    border-radius: 50%;
    display: flex;/*todos os elementos dentro da div*/
    padding: 4px;

    transition: transform .3s;/*Primeira propriedade v erifica se o elemento header div recebeu alguma transição. A segunda propriedade é de quanto tempo recebeu essa transição*/
}

header div:hover{
    transform: scale(1.1);/*Ao passar o mouse por cima, a scala será de 1.1*/
}

header img{
    width: 100%;/*100% em relação a div*/
    border-radius: 50%;/*arredondamento de borda de 50%*/
}


main {
    max-width: 580px;/*largura máxima de 580 píxels*/
    width: 90%;/*Largura de 90% da tela*/

    margin: 32px auto;/*Margens, quando contém dois valores ele verifica primeiro em cima de depois em baixo. Neste caso 32px em cima e automático em baixo*/

    display: grid;
    gap: 24px;

    margin-top: 32px;

    /*outra possibilidade*/
    /*display: flex;
    flex-direction: column;
    gap: 24px;
    */
}

/*seção*/
section {
    color: white;

    background-image: linear-gradient(90deg, #9572fc 0%, #49e7ad 50.52%, #e2d45c 100%); /*Forma de realizar uma "degradê" de cores*/
    padding-top: 4px;
    border-radius: 10px;
}

section div {

    background-color: #242634;
    padding: 32px;
    padding-top: 24;
    border-radius: 8px;
}

section h2 {
    font-weight: 900;/*peso de 900*/
    font-size: 24px;/*tamanho de 24px*/
    letter-spacing: -0.47px;/*espaço entre as letras é de -0.47px*/
}


section p {
    font-weight: 400;
    font-size: 16px;
    letter-spacing: -0.18px;
    color: #A1A1AA;
}

/*introduzindo um display*/
section ul {
    display: flex;/*Serve para colocar as caixas uma ao lado da outra, uma vez que cada caixa preenche uma linha inteira no HTML*/
    flex-wrap: wrap;
    gap: 16px;/*propriedade gap só funciona caso a propriedade display for flex*/

    margin-top: 24px;
}

section ul li {
    transition: transform 0.3s;/*tranformação de 0.3segundos*/
}

section ul li:hover {
    transform: scale(1.1);/*Ao passar o mouse por cima, a scala será de 1.1*/
}

/*classe games-list. Estilizando as tags img dentro da classe*/
.games-list img{
    border-radius: 8px;
    width: 90px;
}

/*classe streamers-list. Estilizando as tags img dentro da classe*/
.streamers-list img{
    border-radius: 50%; /*borda arredondada*/
    width: 70px;/*largura da borda*/

    border: 1px solid #443e54;/*tamanho e cor da borda*/
}


/*animation*/

header div {
    animation: fromTop .7s .3s backwards;/*1ª propridade é o nome da animação que você criou. 2ª propriedade é o tempo de duração da animação(7milissegundos).
                                           3ª propriedade é o delay. 4ª propriedade backwards para puxar as aniamações da animação criada*/
    /*animation-delay: 1s;*/
}

main section{
    animation: fromBotton .7s backwards;
}

/*Pegando o filho 1 do section que está no main*/
main section:nth-child(1){
    animation-delay: 0s;
}

main section:nth-child(2){
    animation-delay: .4s;
}

main section:nth-child(3){
    animation-delay: .8s;
}

/*animation-list*/

/*@keyframes comando para ralizar animações. fromTop nome dado que você desejar da animação*/
@keyframes fromTop{
    /*início da animação*/
    from{
        opacity: 0;                  /*opacidade inicial 0%*/
        transform: translateY(-30px);/*começar apartir de -30px do eixo Y*/
    }

    /*final da animação*/
    to{
        opacity: 1;               /*opacidade final 100%*/
        transform: translateY(0);/*terminar animação em 0px do eixo Y*/
    }
}

@keyframes fromBotton {
    /*início da animação*/
    from{
        opacity: 0;                  /*opacidade inicial 0%*/
        transform: translateX(-30px);/*começar apartir de -30px do eixo X*/
    }

    /*final da animação*/
    to{
        opacity: 1;               /*opacidade final 100%*/
        transform: translateX(0);/*terminar animação em 0px do eixo X*/
    }
    
}